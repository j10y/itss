OfficeHeaderReadForm = Ext.extend(Ext.Panel, {
			taskId:null,
			setTaskId:function(vId){
			   this.taskId=vId;
			},
			getTaskId:function(){
			   return this.taskId;
			},
			// 内嵌FormPanel
			formPanel : null,
			displayPanel:null,
			// 构造函数
			constructor : function(_cfg) {
				Ext.applyIf(this, _cfg);
				// 必须先初始化组件
				this.initUIComponents();
				OfficeHeaderReadForm.superclass.constructor.call(this, {
							id : 'OfficeHeaderReadFormWin',
							layout : 'form',
							items : [this.displayPanel,this.formPanel],
							modal : true,
							height : 450,
							width : 800,
//							autoScroll:true,
							maximizable : true,
							buttonAlign : 'center',
							buttons : this.buttons
						});
			},// end of the constructor
			// 初始化组件
			initUIComponents : function() {
			    this.displayPanel=new Ext.Panel({
				      id:'ArchivesHandleDisplayPanel',
				      autoScroll : true,
				      height:200,
				      border:false,
				      autoLoad:{url:__ctxPath+'/pages/archive/archivedetail.jsp?archiveId=${archives_archivesId}'}
				});
				this.formPanel = new Ext.FormPanel({
							layout : 'form',
							bodyStyle : 'padding:10px 10px 10px 10px',
							border : false,
							autoScroll :false,
							url : __ctxPath + '/archive/modStatusArchives.do',
							id : 'OfficeHeaderReadForm',
							defaults : {
								anchor : '98%,98%'
							},
							items : [{
									   xtype:'hidden',
									   name:'archivesId',
									   value:'${archives_archivesId}'
									},{
									   xtype:'hidden',
									   name:'cruArchDepId',
									   value:'${cruArchDepId}'
									},{
										fieldLabel : '审批人',
										xtype:'container',
										items:[{
											fieldLabel : '局长',
											labelAlign: 'right',
											name : 'leadChecked',
											id : 'leadChecked',
											xtype:'checkbox',
											boxLabel : '局长',
											inputValue :'1'
										}]
									},{
					
						xtype : 'container',
						layout : 'column',
						items : [{
							xtype : 'label',
							style : 'padding-left:0px',
							text : '分管领导:',
							width : 105
						}, {
							xtype : 'textarea',
							width : 350,
							id : 'proxyUserNames',
							blankText:'请选择分管领导',
							readOnly:true,
							name : 'proxyUserNames'
						}, {
							xtype : 'hidden',
							id : 'proxyUserIds',
							name : 'proxyUserIds'
						}, {
							xtype : 'button',
							text : '选择人员',
							iconCls:'btn-mail_recipient',
							handler : function() {
								UserSelector.getView(
										function(id, name) {
											Ext.getCmp('proxyUserNames')
													.setValue(name);
											Ext.getCmp('proxyUserIds')
													.setValue(id);
										}).show();

							}
						}]
					},{
										fieldLabel : '审批意见',
										name : 'handleOpinion',
										allowBlank:false,
										xtype:'textarea'
									}, {
										name : 'status',
										xtype:'hidden',
										value:3
									}

							]
						});
				// 初始化功能按钮
				this.buttons = [new Ext.Button({
									iconCls:'btn-transition',
									text : '拒绝',
									handler : function(){
										Ext.getCmp("proxyUserNames").allowBlank = true;
										if (Ext.getCmp("OfficeHeaderReadForm").getForm().isValid()) {
											Ext.getCmp("OfficeHeaderReadForm").getForm().submit({
									            url:__ctxPath+ "/archive/modStatusArchives.do",
												method:'post',
												params:{status:0},
												success : function(fp, action) {
													Ext.ux.Toast.msg('操作信息','成功保存！');
												    Ext.getCmp("OfficeHeaderReadForm").getForm().submit({
											            url:__ctxPath+ "/flow/nextProcessActivity.do",
														method:'post',
														params:{taskId:Ext.getCmp("OfficeHeaderReadFormWin").taskId, signalName:'to结束1', activityName:'办公室主任批阅', destName:'结束1'},
														success : function(fp, action) {
															Ext.ux.Toast.msg('操作信息','成功保存！');
														    AppUtil.removeTab('ProcessForm'+Ext.getCmp("OfficeHeaderReadFormWin").taskId);
															var myTaskView=Ext.getCmp("MyTaskGrid");
															var appHomeTaskGrid=Ext.getCmp("appHomeTaskGrid");
															if(appHomeTaskGrid!=null){
																appHomeTaskGrid.getStore().reload();
															}
															Ext.getCmp("proxyUserNames").allowBlank = false;
															if(myTaskView!=null){
																//AppUtil.activateTab(taskView);
																myTaskView.getStore().reload();
															}
														},
														failure : function(fp, action) {
															Ext.ux.Toast.msg('操作信息','操作出错，请联系管理员！');
															Ext.getCmp("proxyUserNames").allowBlank = false;
														}
											    	});
												},
												failure : function(fp, action) {
													Ext.ux.Toast.msg('操作信息','操作出错，请联系管理员！');
													Ext.getCmp("proxyUserNames").allowBlank = false;
												}
									    	});
										}
									}
								}),
						    #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'转至[${v.destination}]',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}')
								})
								#set ($count=$count+1)
							#end
						];
			},// end of the initcomponents
			/**
			 * 保存
			 */
			save : function(formPanel, panel,signalName,activityName) {
				var checkValue = Ext.getCmp("leadChecked").getValue();//领导是否被选择
				if(!checkValue){//未选择局领导
					Ext.getCmp("proxyUserNames").allowBlank = false;
				}else{
					Ext.getCmp("proxyUserNames").allowBlank = true;
				}
				if (formPanel.getForm().isValid()) {
					
					//获取下个节点的审批人	
					
					//分局领导 Ext.getCmp("proxyUserIds").getValue()
					//获取局长
					
					var userIds = Ext.getCmp("proxyUserIds").getValue();
					if(checkValue){//选择局领导
						Ext.Ajax.request({
							async: false,//同步
							url : __ctxPath
									+ "/archive/getByCurrentUserArchRecUser.do",
							success : function(h, j) {
								var k = Ext.util.JSON.decode(h.responseText).data;
								var flowAssignId = k.secretaryUserId;
								if(flowAssignId&&flowAssignId!=""){
									if(userIds.length>0){
										userIds = flowAssignId + ',' + userIds;
									}else{
										userIds = flowAssignId;
									}
								}else{
									Ext.MessageBox.show({
										title : '操作信息',
										msg : '请设置局长信息！',
										buttons : Ext.MessageBox.OK,
										icon : Ext.MessageBox.ERROR
									});
									return;
								}
							},
							failure : function(h, j){
								Ext.ux.Toast.msg('操作信息','操作出错，请联系管理员！');
							}
						});
					}
					formPanel.getForm().submit({
						method : 'POST',
						waitMsg : '正在提交数据...',
						success : function(fp, action) {
							formPanel.getForm().submit({
						            url:__ctxPath+ "/flow/nextProcessActivity.do",
									method:'post',
									//params:{taskId:panel.taskId,signalName:signalName,activityName:activityName,flowAssignId:userIds},
									params:{taskId:panel.taskId,signalName:signalName,activityName:activityName,signUserIds:userIds},
									success : function(fp, action) {
									    Ext.ux.Toast.msg('操作信息','成功保存！');
									    AppUtil.removeTab('ProcessForm'+panel.taskId);
										var myTaskView=Ext.getCmp("MyTaskGrid");
										var appHomeTaskGrid=Ext.getCmp("appHomeTaskGrid");
										if(appHomeTaskGrid!=null){
											appHomeTaskGrid.getStore().reload();
										}
										if(myTaskView!=null){
											//AppUtil.activateTab(taskView);
											myTaskView.getStore().reload();
										}
									},
									failure : function(fp, action) {
										Ext.ux.Toast.msg('操作信息','操作出错，请联系管理员！');
									}
						    });
							var gridPanel = Ext
									.getCmp('ArchivesHandleGrid');
							if (gridPanel != null) {
								gridPanel.getStore().reload();
							}
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
										title : '操作信息',
										msg : '信息保存出错，请联系管理员！',
										buttons : Ext.MessageBox.OK,
										icon : Ext.MessageBox.ERROR
									});
							window.close();
						}
					});
					
				}
			}// end of save
		})