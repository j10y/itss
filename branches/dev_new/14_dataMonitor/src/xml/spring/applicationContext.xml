<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>ApplicationResources</value>
		</property>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:ApplicationResources.properties</value>
			</list>
		</property>
	</bean>
	<bean id="datasoruce"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}">
		</property>
		<property name="url"
			value="${jdbc.url}">
		</property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="datasoruce" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">auto</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
		<!-- 配置Hibernate映射文件路径 
		<value>classpath:com/xp/**/bean</value>
			<value>classpath:com/xp/**/**/bean</value>
			<value>classpath:com/xp/**/entity</value>		
		-->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/xp/**/bean</value>
							
			</list>
		</property>

	</bean>
	
	 <!-- 事务拦截器，对所有业务模块的服务方法进行代理拦截  -->
    <bean id="transactionIntercetorTemplate" abstract="true">
        <property name="transactionAttributes">
            <props>
                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="fetch*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="is*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="export*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="select*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="show*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="audit*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="delete">PROPAGATION_REQUIRED</prop>
                <prop key="pass*">PROPAGATION_REQUIRED</prop>
                <prop key="submit*">PROPAGATION_REQUIRED</prop>
                <prop key="modify*">PROPAGATION_REQUIRED</prop>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="import*">PROPAGATION_REQUIRED</prop>
                <prop key="init*">PROPAGATION_REQUIRED</prop>
                <prop key="synchroI*">PROPAGATION_REQUIRED</prop>
                <prop key="post*">PROPAGATION_REQUIRED</prop>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
	   <!-- Hibernate Transaction Interceptor Definition -->
	    <bean id="hibernateTransactionInterceptor"
	        class="org.springframework.transaction.interceptor.TransactionInterceptor"
	        parent="transactionIntercetorTemplate">
	        <property name="transactionManager">
	            <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	                <property name="sessionFactory">
	                   <ref local="sessionFactory" />
	                </property>
	            </bean>
	        </property>
	    </bean>
  
     <!-- Jdbc Transaction Interceptor Definition -->
    <bean id="jdbcTransactionInterceptor"
        class="org.springframework.transaction.interceptor.TransactionInterceptor"
        parent="transactionIntercetorTemplate">
        <property name="transactionManager">
            <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource">
                    <ref bean="datasoruce" />
                </property>
            </bean>
        </property>
    </bean>

	 <!-- 自动代理  --> 
	 <bean id="autoProxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
	     <property name="beanNames">  
	      <list> 
	       <value>*Service</value>  
	      </list>  
	     </property>  
	     <property name="interceptorNames">  
	         <list>  
	         	<value>hibernateTransactionInterceptor</value>
	         	<value>jdbcTransactionInterceptor</value>
	         </list>  
	     </property>  
    </bean>  
	
	<bean id="selectDataDao" class="com.xp.commonpart.dao.impl.SelectDataDaoImpl">  
	  	<property name="dataSource" ref="datasoruce"></property>  
	 </bean>  
	 <bean id="selectDataService" class="com.xp.commonpart.service.impl.SelectDataServiceImpl">  
	  	<property name="selectDataDao" ref="selectDataDao"></property>  
	 </bean> 
	<bean id="baseDao" class="com.xp.commonpart.dao.impl.BaseDaoImpl">  
	  <property name="sessionFactory" ref="sessionFactory"></property> 
	</bean> 
	<bean id="baseService" class="com.xp.commonpart.service.impl.BaseServiceImpl">  
	  <property name="baseDao" ref="baseDao"></property> 
	</bean>
	
	<bean id="alarmSocketServer" class="com.xp.shopalarm.socket.NonBlockingServer" lazy-init="false" init-method="init" scope="singleton">
		<property name="port" value="${socketServer.port}"></property>
		<property name="selectDataService" ref="selectDataService"/>
		<property name="url" value="${danpin.jdbc.url}"></property>
		<property name="username" value="${danpin.jdbc.username}"></property>
		<property name="pwd" value="${danpin.jdbc.pwd}"></property>
		<property name="alarmFinalEndHour" value="${shopAlarm.finalEndHour}"></property>
	</bean>
	
</beans>