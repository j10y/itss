ArchivesHandleForm = Ext.extend(Ext.Panel, {
			taskId:null,
			setTaskId:function(vId){
			   this.taskId=vId;
			},
			getTaskId:function(){
			   return this.taskId;
			},
			// 内嵌FormPanel
			formPanel : null,
			// 内嵌FormPanel
			displayPanel : null,
			// 构造函数
			constructor : function(_cfg) {
				Ext.applyIf(this, _cfg);
				// 必须先初始化组件
				this.initUIComponents();
				ArchivesHandleForm.superclass.constructor.call(this, {
							//id : 'ArchivesHandleFormWin',
							layout : 'form',
							items : [this.displayPanel,this.formPanel],
							modal : true,
							height : 400,
							width : 800,
							maximizable : true,
							buttonAlign : 'center',
							buttons : this.buttons
						});
			},// end of the constructor
			// 初始化组件
			initUIComponents : function() {
				this.displayPanel=new Ext.Panel({
				      id:'ArchivesHandleDisplayPanel',
				      autoScroll : true,
				      height:200,
				      border:false,
				      autoLoad:{url:__ctxPath+'/pages/archive/archivedetail.jsp?archiveId=${archives_archivesId}'}
				});
				this.formPanel = new Ext.FormPanel({
							layout : 'form',
							bodyStyle : 'padding:10px 10px 10px 10px',
							border : false,
							url : __ctxPath + '/archive/saveArchivesHandle.do',
							id : 'ArchivesHandleForm',
							defaults : {
								anchor : '98%,98%'
							},
							items : [{
								   xtype:'hidden',
								   name:'archiveId',
								   value:'${archives_archivesId}'
								},{
								   xtype:'hidden',
								   name:'handlerUserIds',
								   value:'${signUserIds}'
								},{
								    xtype:'hidden',
								    name:'cruArchDepId',
								    value:'${cruArchDepId}'
								},{
									xtype : "container",
									layout : "column",
									style : "padding-left:0px;margin-left:0px;",
									height : 30,
									defaults : {
										style : "padding:5px 0px 2px 0px;",
										border : false
									},
									items : [
											{
												xtype : "label",
												text : "归档部门:",
												width : 106
											},
											{
												name : "filedDeptName",
												id : "filedDeptName",
												xtype : "textfield",
												width : "65%",
												value : curUserInfo.depName,
												allowBlank : false,
												readOnly : true
											},
											{
												name : "filedDeptId",
												id : "filedDeptId",
												value : curUserInfo.depId,
												xtype : "hidden"
											},
											{
												xtype : "button",
												iconCls : "menu-department",
												text : "选择部门",
												allowBlank:false,
												handler : function() {
													DepSelector
															.getView(
																	function(
																			b,
																			c) {
																		Ext
																				.getCmp(
																						"filedDeptName")
																				.setValue(
																						c);
																		Ext
																				.getCmp(
																						"filedDeptId")
																				.setValue(
																						b);
																	},
																	true)
															.show();
												}
											} ]
								},{
								
									xtype : "container",
									layout : "column",
									style : "padding-left:0px;margin-left:0px;",
									height : 30,
									defaults : {
										style : "padding:5px 0px 2px 0px;",
										border : false
									},
									items : [
											{
												xtype : "label",
												text : "归档类型:",
												width : 106
											},
											{
												name : "recFiledTypeId",
												id : "recFiledTypeId",
												xtype : "textfield",
												width : "65%",
												xtype : "hidden"

											},
											{

												fieldLabel : "归档类型",
												hiddenName : "recFiledTypeName",
												xtype : "combo",
												mode : "local",
												anchor : "74%",
												allowBlank : false,
												editable : false,
												valueField : "recFiledTypeName",
												displayField : "recFiledTypeName",
												triggerAction : "all",
												store : new Ext.data.SimpleStore(
														{
															autoLoad : true,
															url : __ctxPath
																	+ "/archive/comboArchRecFiledType.do",
															fields : [ "id",
																	"recFiledTypeName"]
														}),
												listeners : {
													select : function(
															d, b, c) {
															Ext.getCmp("recFiledTypeId").setValue(b.data.id);
													}
												}
											} ]
								},{
									fieldLabel : '承办归档意见',
									name : 'handleOpinion',
									id : 'handleOpinion',
									xtype:'textarea',
								    listeners : {
								    	"change" : function(field, newValue, oldValue ){
								    		Ext.getCmp("readFeedback").setValue(newValue);
								    	},
								    	"valid" : function(field){
								    		Ext.getCmp("readFeedback").setValue(field.getValue());
								    	}
								    }
							    },{
								fieldLabel : '0=初始化状态',
								name : 'isPass',
								xtype:'hidden',
								value:1
							    },{
								fieldLabel : '处理意见',
								name : 'readFeedback',
								xtype : 'hidden',
								id : 'readFeedback'
							    },{
								    xtype:'hidden',
								    name:'archUserType',
								    value:1 //0为传阅   1承办
								},{
								    xtype:'hidden',
								    name:'undertakeUserIds',
								    value:'${signUserIds}'
								}
							]
						});
				// 初始化功能按钮
				this.buttons = [
				            #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'转至[${v.destination}]',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}')
								})
								#set ($count=$count+1)
							#end
				];
			},// end of the initcomponents
			/**
			 * 保存记录
			 */
			save : function(formPanel, panel,signalName,activityName){
				if (formPanel.getForm().isValid()) {
					
					formPanel.getForm().submit({
								method : 'POST',
								waitMsg : '正在提交数据...',
								success : function(fp, action) {
								
									//__ctxPath + '/archive/saveArchDispatch.do',
									Ext.Ajax.request({
										url : __ctxPath
												+ "/archive/saveNewArchDispatch.do",
										params : {
											undertakeUserIds:'${signUserIds}',
											archivesId:'${archives_archivesId}',
											archUserType: '1',
											readFeedback : Ext.getCmp("handleOpinion").getValue(),
											cruArchDepId : '${cruArchDepId}'												
										},
										success : function(h, j) {
											
										}
									});
								
									formPanel.getForm().submit({
								            url:__ctxPath+ "/flow/nextProcessActivity.do",
											method:'post',
											params:{taskId:panel.taskId,signalName:signalName,activityName:activityName},
											success : function(fp, action) {
											    Ext.ux.Toast.msg('操作信息','成功保存！');
											    AppUtil.removeTab('ProcessForm'+panel.taskId);
												var myTaskView=Ext.getCmp("MyTaskGrid");
												var appHomeTaskGrid=Ext.getCmp("appHomeTaskGrid");
												if(appHomeTaskGrid!=null){
													appHomeTaskGrid.getStore().reload();
												}
												if(myTaskView!=null){
													//AppUtil.activateTab(taskView);
													myTaskView.getStore().reload();
												}
											},
											failure : function(fp, action) {
												Ext.ux.Toast.msg('操作信息','操作出错，请联系管理员！');
											}
								    });
									var gridPanel = Ext
											.getCmp('ArchivesHandleGrid');
									if (gridPanel != null) {
										gridPanel.getStore().reload();
									}
								},
								failure : function(fp, action) {
									Ext.MessageBox.show({
												title : '操作信息',
												msg : '信息保存出错，请联系管理员！',
												buttons : Ext.MessageBox.OK,
												icon : Ext.MessageBox.ERROR
											});
									            AppUtil.removeTab('ProcessForm'+panel.taskId);
												var myTaskView=Ext.getCmp("MyTaskGrid");
												var appHomeTaskGrid=Ext.getCmp("appHomeTaskGrid");
												if(appHomeTaskGrid!=null){
													appHomeTaskGrid.getStore().reload();
												}
												if(myTaskView!=null){
													//AppUtil.activateTab(taskView);
													myTaskView.getStore().reload();
												}
								}
							});
				}
			}// end of save
		})