/*
1.传入参数为一Map以适应后续的变化,因为解析过程也是动态的
2.Map中设定各种输入参数:
输出：
head[Map],头部输出
	cfx_CheckSum;
	cfx_PriceFileDate;
	cfx_ConfigIdentifer;
	cfx_DateTimeStamp;
	cfx_PropDocumentIdentifier;
	cfx_CFXML;
	totalListPrice;
	orderType
rows[List<OrderProductLine>],行集输出
输入：
applyType,申请类型
disc,折扣
listType[newbox,mes,isu,soft],列表类别
qty,数量                                                                                                     
time,时间标记,检查本规则对输入数据是否在有效
bmsn[String[]],
xmlPath,
outPath,
cfrPath
*/

#created on: Dec 2, 2008
package com.digitalchina.itil.rules

#list any import classes here.
import com.digitalchina.itil.workflow.rules.RequireProcessRuleHelper;
import org.dom4j.Node;
import org.jbpm.graph.node.TaskNode;

import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Date;
import com.digitalchina.itil.workflow.rules.RequireProcessRuleHelper;

import org.apache.commons.beanutils.BeanUtils;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;

#declare any global variables here



function void accountStart(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");	
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");	
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountStart(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void accountAudit(Map $map){

	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");	
	String nodeName = (String)$map.get("nodeName");		
	String result = (String)$map.get("result");	
	String comment = (String)$map.get("comment");
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountAudit(dataId,serviceItemId ,nodeId,nodeName,processId,result,comment);		
}



function void accountBack(Map $map){

	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");	 	
	String nodeName = (String)$map.get("nodeName");	
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String result = (String)$map.get("result");	
	String comment = (String)$map.get("comment");
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountBack(dataId,serviceItemId ,nodeId,nodeName,processId,result,comment);
	
}

function void accountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void accountDeptChange(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountDeptChange(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void accountPersonEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountPersonEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void wwwApplyEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.wwwApplyEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void vpnAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.vpnAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void tempVpnAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.tempVpnAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void telChangeEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.telChangeEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void specialAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.specialAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void tempAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.tempAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void specialAccountRightChangeEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.specialAccountRightChangeEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void specialAccountDeleteEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.specialAccountDeleteEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void tempAccountDeleteEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.tempAccountDeleteEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void accountDeleteEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountDeleteEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void wwwDeleteEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.wwwDeleteEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void newITAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.newITAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void tempMailAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.tempMailAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void deptMailAccountEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.deptMailAccountEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void mailGroupEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.mailGroupEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function void mailGroupDeleteEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.mailGroupDeleteEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void mailForwardEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.mailForwardEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}

function void accountIDFileEnd(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String nodeId = (String)$map.get("nodeId");	
	String processId = (String)$map.get("processId");
	String nodeName = (String)$map.get("nodeName");		
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	processRuleHelper.accountIDFileEnd(dataId,serviceItemId ,nodeId,nodeName,processId);
	
}


function String sbuSelect(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String processName = (String)$map.get("processName");	
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	String trans = processRuleHelper.sbuSelect(dataId,serviceItemId ,processName);
	return trans;
	
}

function String isAMSign(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String processName = (String)$map.get("processName");	
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	String trans = processRuleHelper.isAMSign(dataId,serviceItemId ,processName);
	return trans;
	
}


function String isSign(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String processName = (String)$map.get("processName");	
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	String trans = processRuleHelper.isSign(dataId,serviceItemId ,processName);
	return trans;
	
}


function String isHRJob(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String processName = (String)$map.get("processName");
	String hrJob=(String)$map.get("hrJob");
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	String trans = processRuleHelper.isHRJob(dataId,serviceItemId ,processName,hrJob);
	return trans;
	
}




function String specailErpOrTempEB(Map $map){
	
	String dataId = (String)$map.get("dataId");	
	String serviceItemId = (String)$map.get("serviceItemId");
	String processName = (String)$map.get("processName");	
	RequireProcessRuleHelper processRuleHelper=new RequireProcessRuleHelper();
	String trans = processRuleHelper.specailErpOrTempEB(dataId,serviceItemId ,processName);
	return trans;
	
}

rule "accountStart"
	salience 1000 
	when
		$map: Map(
			this['ruleName'] =='accountStart'		#ruleName要和rule一致
		)
	then
	accountStart($map);
	$map.put("transitionName","NOLEAVE");	
end




rule "accountAudit"
	salience 900 
	when
		$map: Map(
			this['ruleName'] =='accountAudit'		
		)
	then	
	accountAudit($map);
	$map.put("transitionName",$map.get("result"));	
end



rule "accountBack"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='accountBack'		
		)
	then
	accountBack($map);	
	$map.put("transitionName",$map.get("result"));		
end



rule "newITAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='newITAccountEnd'		
		)
	then	
		newITAccountEnd($map);
	$map.put("transitionName",$map.get("result"));			
end


rule "tempMailAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='tempMailAccountEnd'		
		)
	then	
		tempMailAccountEnd($map);
	$map.put("transitionName",$map.get("result"));			
end

rule "deptMailAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='deptMailAccountEnd'		
		)
	then	
		deptMailAccountEnd($map);
	$map.put("transitionName",$map.get("result"));			
end



rule "accountIDFileEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='accountIDFileEnd'		
		)
	then	
		accountIDFileEnd($map);
	$map.put("transitionName",$map.get("result"));			
end

rule "accountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='accountEnd'		
		)
	then	
	accountEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "accountDeptChange"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='accountDeptChange'		
		)
	then	
	accountDeptChange($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "mailForwardEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='mailForwardEnd'		
		)
	then	
	mailForwardEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "mailGroupEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='mailGroupEnd'		
		)
	then	
	mailGroupEnd($map);
	$map.put("transitionName","NOLEAVE");		
end


rule "mailGroupDeleteEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='mailGroupDeleteEnd'		
		)
	then	
	mailGroupDeleteEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "accountPersonEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='accountPersonEnd'		
		)
	then	
	accountPersonEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "wwwApplyEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='wwwApplyEnd'		
		)
	then	
	wwwApplyEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "vpnAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='vpnAccountEnd'		
		)
	then	
	vpnAccountEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "tempVpnAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='tempVpnAccountEnd'		
		)
	then	
	tempVpnAccountEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "telChangeEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='telChangeEnd'		
		)
	then	
	telChangeEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "accountDeleteEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='accountDeleteEnd'		
		)
	then	
	accountDeleteEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "wwwDeleteEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='wwwDeleteEnd'		
		)
	then	
	wwwDeleteEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "specialAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='specialAccountEnd'		
		)
	then	
	specialAccountEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "tempAccountEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='tempAccountEnd'		
		)
	then	
	tempAccountEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "specialAccountRightChangeEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='specialAccountRightChangeEnd'		
		)
	then	
	specialAccountRightChangeEnd($map);
	$map.put("transitionName","NOLEAVE");		
end




rule "specialAccountDeleteEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='specialAccountDeleteEnd'		
		)
	then	
	specialAccountDeleteEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "tempAccountDeleteEnd"
	salience 800 
	when
		$map: Map(
			this['ruleName'] =='tempAccountDeleteEnd'		
		)
	then	
	tempAccountDeleteEnd($map);
	$map.put("transitionName","NOLEAVE");		
end

rule "sbuSelect"
	salience 700 
	when
		$map: Map(
			this['ruleName'] =='sbuSelect'		
		)
	then	
	$map.put("transitionName",sbuSelect($map));		
end

rule "isAMSign"
	salience 700 
	when
		$map: Map(
			this['ruleName'] =='isAMSign'		
		)
	then	
	$map.put("transitionName",isAMSign($map));		
end

rule "isSign"
	salience 700 
	when
		$map: Map(
			this['ruleName'] =='isSign'		
		)
	then	
	$map.put("transitionName",isSign($map));		
end

rule "isHRJob"
	salience 700 
	when
		$map: Map(
			this['ruleName'] =='isHRJob'		
		)
	then	
	$map.put("transitionName",isHRJob($map));		
end


rule "specailErpOrTempEB"
	salience 700 
	when
		$map: Map(
			this['ruleName'] =='specailErpOrTempEB'		
		)
	then	
	$map.put("transitionName",specailErpOrTempEB($map));		
end

